The following example was taken from:
https://linuxgazette.net/151/misc/melinte/
https://linuxgazette.net/151/melinte.html

Monitoring Function Calls
By Aurelian Melinte

To compile this code you will need the binutils package. It can be obtained from the FSF site. 
This code has been tested with version 2.18 of the binutils, if using later versions, it might require modifications.

Do unpack the binutils archive, configure it and make it.
 Do not install it. Then modify the BINUTILS_SOURCE variable in the Makefile to point to the binutils folder.

Now you can compile the code. 


I changed the above example to support output that can be used as input for plantuml.jar
See:
http://plantuml.com/sequence-diagram

See files:
demo.txt
demo.png

To build:
run:
make

To run the trace program:
set:
export CTRACE_PROGRAM=./cppSimpleTraced

run:
LD_PRELOAD=./libctrace.so ./cppSimpleTraced

Where cppSimpleTraced.cpp is the code that is being traced

To run in debug:

gdb -iex "set exec-wrapper env LD_PRELOAD=./libctrace.so gdb" ./cppSimpleTraced


Examples:
-------------------------------------------------------------------------------------------------------------
run:

export CTRACE_PROGRAM=./cppSimpleTraced
LD_PRELOAD=./libctrace.so ./cppSimpleTraced > trace_cppSimpleTraced.txt
grep 'thread=139786903455552' trace_cppSimpleTraced.txt > trace_cppSimpleTraced_filtered.txt

cp trace_cppSimpleTraced_filtered.txt  trace_cppSimpleTraced_UML.txt

Then open file trace_cppSimpleTraced_UML.txt in a  editor and replace 'thread=139786903455552' with ''
Then add the prefix and suffex to the files:
@startuml
participant "Main(0)"
 
< all the stuff in the middle!!!! > 
 
@enduml

To create the UML *.png file run plantuml.jar in the directory where file trace_cppSimpleTraced_UML.txt is located.
Plantuml will create trace_cppSimple
Traced_UML.png from trace_cppSimpleTraced_UML.txt
java -jar plantuml.jar -gui
-------------------------------------------------------------------------------------------------------------


export CTRACE_PROGRAM=./cpptraced
LD_PRELOAD=./libctrace.so ./cpptraced > trace_cpptraced5.txt
grep 'thread=' trace_cpptraced5.txt > trace_cpptraced_filtered5.txt

Clean up trace_cpptraced_UML5.txt by removing the "thread=1342412341" and setting the active colour code.




